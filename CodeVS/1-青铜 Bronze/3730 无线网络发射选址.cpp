/*题目描述:随着智能手机的日益普及，人们对无线网的需求日益增大。某城市决定对城市内的公共场所覆盖无线网。
           假设该城市的布局为由严格平行的129条东西向街道和129条南北向街道所形成的网格状，并且相邻的平行街道之间的距离都是恒定值1。
		   东西向街道从北到南依次编号为0,1,2…128,南北向街道从西到东依次编号为0,1,2…128。
		   东西向街道和南北向街道相交形成路口,规定编号为x的南北向街道和编号为y的东西向街道形成的路口的坐标是(x, y).在某些路口存在一定数量的公共场所。
		   由于政府财政问题，只能安装一个大型无线网络发射器。该无线网络发射器的传播范围是一个以该点为中心，边长为2*d的正方形。传播范围包括正方形边界。
		   现在政府有关部门准备安装一个传播参数为d的无线网络发射器，希望你帮助他们在城市内找出合适的安装地点，使得覆盖的公共场所最多。
  输入描述:第一行包含一个整数d，表示无线网络发射器的传播距离。
           第二行包含一个整数n，表示有公共场所的路口数目。
		   接下来n行，每行给出三个整数x,y,k,中间用一个空格隔开,分别代表路口的坐标(x, y)以及该路口公共场所的数量。同一坐标只会给出一次。
  输出描述:输出一行，包含两个整数，用一个空格隔开，分别表示能覆盖最多公共场所的安装地点方案数，以及能覆盖的最多公共场所的数量。
  样例输入:1
           2
		   4 4 10
		   6 6 20
  样例输出:1 30
  数据范围及提示:对于100%的数据,1<=d<=20,1<=n<=20,0<=x<=128,0<=y<=128,0<k<=1,000,000.*/

#include<iostream>
using namespace std;

int g[135][135],n,d,x,y,nu,sum,mx,cnt;

int main()
{
	cin>>d>>n;
	for(int i=1;i<=n;i++)  {cin>>x>>y>>nu;  g[x][y]=nu;}
	for(int i=0;i<=128;i++)
	  for(int j=0;j<=128;j++)
	  {
	      sum=0;
		  for(int k=i-d;k<=i+d;k++)
		    for(int l=j-d;l<=j+d;l++)
		    {
		    	if(k<0||l<0||k>128||l>128)  continue;
			    sum+=g[k][l];
			}
		  if(sum>mx)  {mx=sum;  cnt=1;  continue;}
		  if(sum==mx)  cnt++;
	  }
	cout<<cnt<<' '<<mx;
	return 0;
}
