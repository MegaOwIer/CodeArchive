/*题目描述:翻译软件的原理很简单，它只是从头到尾，依次将每个英文单词用对应的中文含义来替换。
           对于每个英文单词，软件会先在内存中查找这个单词的中文含义，如果内存中有，软件就会用它进行翻译；
		   如果内存中没有，软件就会在外存中的词典内查找，查出单词的中 文含义然后翻译，并将这个单词和译义放入内存，以备后续的查找和翻译。
		   假设内存中有M个单元,每单元能存放一个单词和译义.当软件将一个新单词存入内存前,如果当前内存中已存入的单词数不超过M,软件会将新单词存入一个未使用的内存单元;
		   若内存中已存入M个单词，软件会清空最早进入内存的那个单词，腾出单元来,存放新单词.假设一篇英语文章的长度为N个单词.
		   给定这篇待译文章，翻译软件需要去外存查找多 少次词典？假设在翻译开始前，内存中没有任何单词。
  输入描述:输入共2行。每行中两个数之间用一个空格隔开。第一行为两个正整数M和N，代表内存容量和文章的长度。
           第二行为N个非负整数，按照文章的顺序，每个数（大小不超过1000）代表一个英文单词。文章中两个单词是同一个单词，当且仅当它们对应的非负整数相同。
  输出描述:输出共1行，包含一个整数，为软件需要查词典的次数。
  样例输入:3 7
           1 2 1 5 4 4 1
  样例输出:5*/

#include<iostream>
#include<cstring>
using namespace std;

int dict[105],pas,m,n,cnt;
bool flag;

int main()
{
	memset(dict,-1,sizeof(dict));
	cin>>m>>n;
	for(int i=1;i<=n;i++)
	{
	    cin>>pas;
	    for(int j=0;j<=m-1;j++)  if(dict[j]==pas)  {flag=1;  break;}
	    if(!flag)
	    {
		    dict[(cnt+1)%m]=pas;
		    cnt++;
		}
		flag=0;
	}
	cout<<cnt;
	return 0;
}
