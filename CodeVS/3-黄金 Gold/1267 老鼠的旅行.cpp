/*题目描述:你是一只生活在笼子里的实验室老鼠,实验室是一个R行C列的格子矩阵(1<=R,C<=25).每个格子是一个笼子
           为了让你锻炼身体,实验室管理员允许你在笼子之间移动.你只能向右和向下移动,你不能斜着移动,也不能向上和向左移动
		   你所在的笼子是实验室的左上角,标记为(1,1),你想去右下角的笼子(R,C)里找你的朋友,但是有一些笼子是不能经过的,因为里面有猫
		   你朋友很爱数学,他想要知道有多少条不同的路径可以从你的笼子到达他的笼子.写一个程序来计算吧
  输入描述:第一行包含2个整数R和C,第二行一个整数K代表包含猫的笼子的个数,接下来K行代表K个包含猫的笼子的位置信息,注意(1,1)和(R,C)这两个位置是不会有猫的
  输出描述:输出一个非负整数代表你可以去他笼子里的路径数目,你可以假设这个输出会严格小于1,000,000,000
  样例输入:样例输入1:2 3
                     1
					 2 1
		   样例输入2:3 4
		             3
				     2 3
					 2 1
					 1 4
  样例输出:样例输出1:2
           样例输出2:1  */

#include<iostream>
#include<algorithm>
using namespace std;

int a[30][30],n,r,c;

int main()
{
	cin>>r>>c>>n;
	for(int i=1,x,y;i<=n;i++)  {cin>>x>>y;  a[x][y]=-1;}
	a[1][1]=1;
	for(int i=2;i<=r;i++)  if(a[i][1]!=-1)  a[i][1]=a[i-1][1];
	for(int i=2;i<=c;i++)  if(a[1][i]!=-1)  a[1][i]=a[1][i-1];
	for(int i=2;i<=r;i++)  for(int j=2;j<=c;j++)  if(a[i][j]!=-1)  a[i][j]=max(0,a[i-1][j])+max(0,a[i][j-1]);
	cout<<a[r][c];
	return 0;
}
